require 'puma/configuration'

namespace :puma do
  desc 'Start puma'
  task :start do
    on roles fetch(:puma_role) do
      within release_path do
       execute :bundle, :exec, :puma, "-q -d -e #{fetch(:rails_env)} -C #{config_file}"
      end
    end
  end

  desc 'Stop puma'
  task :stop do
    on roles fetch(:puma_role) do
      within release_path do
        execute :bundle, :exec, :pumactl, "-S #{configuration.options[:state]} stop"
      end
    end
  end

  desc 'Restart puma'
  task :restart do
    on roles fetch(:puma_role) do
      within release_path do
        execute :bundle, :exec, :pumactl, "-S #{configuration.options[:state]} restart"
      end
    end
  end

  desc 'Restart puma (phased restart)'
  task :phased_restart do
    on roles fetch(:puma_role) do
      within release_path do
        execute :bundle, :exec, :pumactl, "-S #{state_path} phased-restart"
      end
    end
  end
end

namespace :load do
  after 'deploy:finished', 'puma:restart'

  task :defaults do
    set :puma_state, ->  { "#{shared_path}/sockets/puma.state" }
    set :puma_socket, "unix://#{shared_path}/sockets/puma.sock"
    set :puma_role, :app
  end
end

def config_file
  @config_file = "./config/puma/#{fetch(:rails_env)}.rb"
end

def configuration
  @config ||= Puma::Configuration.new(:config_file => config_file)
  @config.load
  @config
end